### 2020-01-12 processing 16s v4

#transfering data from the sequencing center to home directories. 
# first log in to hpcc with rsync
ssh <MSUNetID>@rsync.hpcc.msu.edu

# your terminal line should begin with [<MSUNetID>@globus-01 ~]. Do not log in to a development node. 
# then call the wget program 
module load GCCcore/6.4.0 wget/1.19.4

# for the first set of samples
wget -r -np -nH --ask-password ftps://evanss@titan.bch.msu.edu/20191213_16S-V4_PE250
#password is ka7RUsas

#for the lane of samples 
wget -r -np -nH --ask-password ftps://evanss@titan.bch.msu.edu/20200107_16S-V4_PE250

#then copy the files to EvansLab folder. (If you have access...) 


###################################################################
#Processing sequences
###################################################################
# the protocol I'm using was made by Lukas and is on github: https://github.com/GLBRC-TeamMicrobiome/TagAnalysis/blob/master/16S_USEARCH_Pipeline.md

#join a development node 
ssh dev-intel16.i


############
## Quality Checking
############

#RUN 1 
#Make sure you are in the folder with the extracted forward and reverse reads from Run 1
cd ./20191213_16S-V4_PE250

#Files are stored as .gz so you need to unzip them. 
gunzip *.gz

#First look at the quality of raw unmerged seqs for run1
mkdir fastq_info_run1

nano fasta_info_fq.sh
!#/bin/bash
for fq in *.fastq
do
/mnt/research/rdp/public/thirdParty/usearch11.0.667_i86linux64 -fastx_info $fq -output fastq_info_run1/$fq
done

#to save nano
ctrl+o

#to exit nano
ctrl+x

#make file executable and run the for loop create in your fasta_info_fq.sh file
chmod +x fasta_info_fq.sh
./fasta_info_fq.sh

#move to the fastq_info directory
cd fastq_info_run1/

#Now run the below code to summarize the fastq info for all of the forward and reverse reads

grep "^File" * > Run1_fastq_lengths.txt
grep "^EE" * > Run1_fastq_EE.txt
#look for any forward and reverse reads that look especially bad in terms of quality (high E is bad quality). This info will also be really helpful for troubleshooting later on (e.g. why some samples have extremely low read numbers)

#I saved these as csv files. 

###RUN 2 
#Make sure you are in the folder with the extracted forward and reverse reads from Run 2
cd ./20200107_16S-V4_PE250/


#Files are stored as .gz so you need to unzip them. 
gunzip *.gz

#First look at the quality of raw unmerged seqs for run2
mkdir fastq_info_run2

nano fasta_info_fq.sh
!#/bin/bash
for fq in *.fastq
do
/mnt/research/rdp/public/thirdParty/usearch11.0.667_i86linux64 -fastx_info $fq -output fastq_info_run2/$fq
done

#to save nano
ctrl+o

#to exit nano
ctrl+x

#make file executable and run the for loop create in your fasta_info_fq.sh file
chmod +x fasta_info_fq.sh
./fasta_info_fq.sh

#move to the fastq_info directory
cd fastq_info_run2/

#Now run the below code to summarize the fastq info for all of the forward and reverse reads

grep "^File" * > Run2_fastq_lengths.txt
grep "^EE" * > Run2_fastq_EE.txt
#look for any forward and reverse reads that look especially bad in terms of quality (high E is bad quality). This info will also be really helpful for troubleshooting later on (e.g. why some samples have extremely low read numbers)

#I saved these files as .csv files

